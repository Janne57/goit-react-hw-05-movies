{"version":3,"file":"static/js/764.209eb742.chunk.js","mappings":"mLACA,EAAyB,uB,SCmBzB,EAhBe,WACX,OACI,iBAAKA,UAAWC,EAAhB,WACE,uBAAG,gBACH,SAAC,KAAD,CACEC,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,iBACVC,aAAc,CAAC,EACfC,aAAa,iBACbC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,eAIhE,C,iHCuED,UAtFe,WAGb,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KACA,GAA0CC,EAAAA,EAAAA,MAA1C,eAAOC,EAAP,KAAsBC,EAAtB,KAGA,GAA8BT,EAAAA,EAAAA,WAC5B,kBAAMQ,EAAcE,IAAI,YAAc,EAAtC,IADF,eAAOC,EAAP,KAAgBC,EAAhB,KAEAC,QAAQC,IAAI,UAAWH,IAEvBI,EAAAA,EAAAA,YAAU,WAAM,wCACd,qFACET,GAAa,GADf,kBAGUU,MAAM,4FAGTC,MAAK,SAAAC,GACJ,OAAOA,EAASC,MACjB,IACAF,MAAK,SAAAC,GACJhB,GAAS,OAAIkB,EAAcF,EAASG,UAIrC,IAdP,sDAgBIjB,EAAS,KAAMkB,SAhBnB,uBAkBIhB,GAAa,GAlBjB,2EADc,uBAAC,WAAD,wBAsBdiB,EACD,GAAE,IAEH,IAAMH,EAAgB,SAAAI,GACpB,OAAOA,EAAMC,KAAI,kBAA6B,CAAEC,eAA/B,EAAGA,eAA4CC,GAA/C,EAAmBA,GAAnB,GAClB,EAGKC,EAAe3B,EAAM4B,QAAO,SAAAC,GAAG,OAAIA,EAAIJ,eAAeK,SAASpB,EAAQqB,cAAxC,IAMrC,OACE,6BACE,kBACEC,KAAK,OACLC,MAAOvB,EAEPwB,SAAU,SAAAC,GAAG,OAAI3B,EAAkBG,EAAWwB,EAAIC,OAAOH,OAA5C,KAEf,mBAAQD,KAAK,SAASK,QAAS,kBAAM7B,GAAN,EAA/B,SAAyD,WAGxDN,GAAS,CAAEA,MAAAA,GACXE,IAAa,SAAC,IAAD,KACd,0BACE,SAAC,KAAD,CAASkC,GAAG,eAGd,wBAQKX,EAAaH,KAAK,YAA6B,IAA1BC,EAAyB,EAAzBA,eAAgBC,EAAS,EAATA,GACtC,OACE,yBACE,SAAC,KAAD,CAAMY,GAAE,iBAAYZ,GAApB,SAA2BD,KADpBC,EAIZ,QAIR,C,sBCxFD,SAASa,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBb,EAAQc,EAAKd,KAInB,CAHE,MAAO/B,GAEP,YADAwC,EAAOxC,EAET,CAEI6C,EAAKC,KACPP,EAAQR,GAERgB,QAAQR,QAAQR,GAAOjB,KAAK2B,EAAOC,EAEvC,CAEe,SAASM,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUR,EAASC,GACpC,IAAIF,EAAMW,EAAGK,MAAMJ,EAAME,GAEzB,SAASX,EAAMV,GACbM,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQX,EAClE,CAEA,SAASW,EAAOa,GACdlB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASa,EACnE,CAEAd,OAAMe,EACR,GACF,CACF,C","sources":["webpack://goit-react-hw-05-movies/./src/components/Loader.module.css?9d64","components/Loader.js","pages/Movies.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"spiner\":\"Loader_spiner__xTnPT\"};","// import 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport { ColorRing } from 'react-loader-spinner';\nimport css from '..//components/Loader.module.css'\n\nconst Loader = () =>{\n    return (\n        <div className={css.spiner}>\n          <p>LOADING...</p>\n          <ColorRing\n            visible={true}\n            height=\"80\"\n            width=\"80\"\n            ariaLabel=\"blocks-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"blocks-wrapper\"\n            colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n          />\n        </div>\n      )\n}\nexport default Loader;","import { Link, NavLink, useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport Loader from 'components/Loader';\n\nconst Movies = () => {\n  // const location = useLocation();\n  // console.log('location', location);\n  const [movie, setMovie] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchPharams, setSearchPharams] = useSearchParams();\n  // const movieId = searchPharams.get('movieId' || '');\n  \n  const [movieId, setMovieId] = useState(\n    () => searchPharams.get('movieId') || '' );\n  console.log('movieId', movieId);\n\n  useEffect(() => {\n    async function fetchMovie() {\n      setIsLoading(true);\n      try {\n        await fetch(\n          `https://api.themoviedb.org/3/trending/movie/day?api_key=356db60679791a010148fefe0790ebd1`\n        )\n          .then(response => {\n            return response.json();\n          })\n          .then(response => {\n            setMovie([...getNormalized(response.results)]);\n            // console.log('запрос на movie идет', movie);\n            // console.log('response.results', response.results);\n            // console.log('response', response);\n          });\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetchMovie();\n  }, []);\n\n  const getNormalized = array => {\n    return array.map(({ original_title, id }) => ({ original_title, id }));\n  };\n// const movieNew=[...movie];\n\n  const visibleMovie = movie.filter(mov => mov.original_title.includes(movieId.toUpperCase()));\n  // console.log('movieNew', movieNew);\n  // console.log('Movie.1', movie[1].original_title);\n  // console.log('Movie.original_title', movie.original_title);\n  // console.log('visibleMovie', visibleMovie);\n\n  return (\n    <main>\n      <input\n        type=\"text\"\n        value={movieId}\n        // onChange={evt => setSearchPharams({ movieId: evt.target.value })}\n        onChange={evt => setSearchPharams( setMovieId(evt.target.value) )}\n      />\n      <button type=\"submit\" onClick={() => setSearchPharams()}>\n        Search\n      </button>\n      {error && { error }}\n      {isLoading && <Loader/>}\n      <div>\n        <NavLink to=\"/movies\"></NavLink>\n        {/* <NavLink to=\"/movies\" state={{from: location}}>Movies</NavLink> */}\n      </div>\n      <ul>\n        {/* {movie.map(mov => {\n          return (\n            <li key={mov.id}>\n              <Link to={`movies/${mov.id}`}>{mov.original_title}</Link>\n            </li>\n          );\n        })} */}\n          {visibleMovie.map((({ original_title, id }) => {\n          return (\n            <li key={id}>\n              <Link to={`movies/${id}`}>{original_title}</Link>\n            </li>\n          );\n        }))}\n      </ul>\n    </main>\n  );\n};\n\nexport default Movies;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["className","css","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","useState","movie","setMovie","error","setError","isLoading","setIsLoading","useSearchParams","searchPharams","setSearchPharams","get","movieId","setMovieId","console","log","useEffect","fetch","then","response","json","getNormalized","results","message","fetchMovie","array","map","original_title","id","visibleMovie","filter","mov","includes","toUpperCase","type","value","onChange","evt","target","onClick","to","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}