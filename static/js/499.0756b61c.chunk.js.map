{"version":3,"file":"static/js/499.0756b61c.chunk.js","mappings":"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","sources":["components/Cast.js","webpack://goit-react-hw-05-movies/./src/components/Loader.module.css?9d64","components/Loader.js","components/Reviews.js","webpack://goit-react-hw-05-movies/./src/pages/MovieDetails.module.css?6cd2","pages/MovieDetails.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Loader from './Loader';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n  // const [actor, setActor ] = useState(null);\n  const [error, setError] = useState(null);\n\n  // console.log('movieId', movieId);\n\n  useEffect(() => {\n    async function fetchActor() {\n        setIsLoading(true);\n        try {\n            await fetchActor(`\n            https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=356db60679791a010148fefe0790ebd1`\n            )\n            .then(responseCast => {\n                return responseCast.json();\n            })\n            .then (responseCast => { \n              console.log('responseCast', responseCast);\n                // setActor(responseCast);\n      \n            })\n        } catch (error ) {\n          setError(error.message); \n          // console.log(error);\n        }\n        finally{\n            setIsLoading(false)\n        }\n    }\n    fetchActor();\n  }, [movieId]);\n\n\n  return (\n    <div>Cast\n      {error && {error}}\n    {isLoading && <Loader />}\n    </div>\n    // <ul>\n    //     {actor.map(actorName=> {\n    //         return (\n    //             <li>\n    //                 {/* <img src=\"{}\" */}\n    //             </li>\n    //         )\n    //     })}\n    // </ul>\n    // <div>{movieId}</div>\n  );\n};\n\nexport default Cast;\n","// extracted by mini-css-extract-plugin\nexport default {\"spiner\":\"Loader_spiner__xTnPT\"};","// import 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport { ColorRing } from 'react-loader-spinner';\nimport css from '..//components/Loader.module.css'\n\nconst Loader = () =>{\n    return (\n        <div className={css.spiner}>\n          <p>LOADING...</p>\n          <ColorRing\n            visible={true}\n            height=\"80\"\n            width=\"80\"\n            ariaLabel=\"blocks-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"blocks-wrapper\"\n            colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n          />\n        </div>\n      )\n}\nexport default Loader;","// import { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  // const { movieId } = useParams();\n\n  return (\n  <div>Reviews</div>\n  );\n};\n\nexport default Reviews;\n","// extracted by mini-css-extract-plugin\nexport default {\"img\":\"MovieDetails_img__WWAoB\"};","import { useParams, useLocation } from 'react-router-dom';\nimport { useState, useEffect, useRef } from 'react';\nimport { Link, Outlet } from 'react-router-dom';\nimport Cast from '../components/Cast.js';\nimport Reviews from '../components/Reviews.js';\nimport css from '../pages/MovieDetails.module.css';\nimport Loader from 'components/Loader.js';\n\nconst MovieDetails = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n  // console.log(movieId);\n  const [originalTitle, setOriginalTitle] = useState('');\n  const [releaseDate, setReleaseDate] = useState(0);\n  const [posterPath, setPosterPath] = useState('');\n  const [voteAverage, setVoteAverage] = useState(0);\n  const [overView, setOverView] = useState('');\n  const [genres, setGenres] = useState([]);\n\n  useEffect(() => {\n    setIsLoading(true);\n    try {\n      fetch(\n        `https://api.themoviedb.org/3/movie/${movieId}?api_key=356db60679791a010148fefe0790ebd1`\n      )\n        .then(response => {\n          return response.json();\n        })\n        .then(response => {\n          console.log(response);\n          // setDataMovie(response);\n          setOriginalTitle(response.original_title);\n          setReleaseDate(response.release_date);\n          setReleaseDate(response.release_date);\n          setPosterPath(response.poster_path);\n          setVoteAverage(response.vote_average);\n          setOverView(response.overview);\n          setGenres([...getNormalizedGenres(response.genres)]);\n          // console.log(originalTitle);\n          // console.log('genres', response.genres);\n          // console.log(releaseDate.getFullYear());\n        });\n    } catch (error) {\n    } finally {\n      setIsLoading(false);\n    }\n  }, [movieId]);\n\n  const getNormalizedGenres = array => {\n    return array.map(item => item.name).join(' ');\n  };\n\n  console.log('location', location);\n  \n\n  return (\n    // <>MovieDetails {movieId}</>;\n\n    <div>\n      <Link to={backLinkLocationRef.current}>Go back</Link>\n      {isLoading && <Loader />}\n      <img\n        className={css.img}\n        src={`https://image.tmdb.org/t/p/w500/${posterPath}`}\n        alt={`{originalTitle  }`}\n      />\n      <h1>{originalTitle}</h1>\n      <p>({parseInt(releaseDate)})</p>\n      <p>User score: {`${Math.round(voteAverage * 10)}`}%</p>\n      <p>Overview</p>\n      <p>({overView})</p>\n      <p>Genres</p>\n      <p>({genres})</p>\n      <ul>\n        <li>\n          <Link to=\"cast\">{<Cast />}</Link>\n        </li>\n        <li>\n          <Link to=\"reviews \">{<Reviews />}</Link>\n        </li>\n      </ul>\n      <Outlet />\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["movieId","useParams","useState","isLoading","setIsLoading","error","setError","useEffect","fetchActor","then","responseCast","json","console","log","message","className","css","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","location","useLocation","backLinkLocationRef","useRef","state","from","originalTitle","setOriginalTitle","releaseDate","setReleaseDate","posterPath","setPosterPath","voteAverage","setVoteAverage","overView","setOverView","genres","setGenres","fetch","response","original_title","release_date","poster_path","vote_average","overview","getNormalizedGenres","array","map","item","name","join","to","current","Loader","src","alt","parseInt","Math","round","Cast"],"sourceRoot":""}