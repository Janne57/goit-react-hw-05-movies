{"version":3,"file":"static/js/667.cc1b1e44.chunk.js","mappings":"+PACA,EAAsB,kBAAtB,EAAoD,wB,SC+FpD,EA3Fa,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCE,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAwBF,EAAAA,EAAAA,UAAS,IAAjC,eAAOG,EAAP,KAAaC,EAAb,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,MAIAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,qFACEL,GAAa,GADf,kBAiBUM,MAAM,sCAAD,OAC6BV,EAD7B,sDAGRW,MAAK,SAAAC,GACJ,OAAOA,EAASC,MACjB,IACAF,MAAK,SAAAC,GAGJN,GAAQ,OAAIQ,EAAcF,EAASG,OASpC,IAnCP,sDAqCIP,EAAS,KAAMQ,SArCnB,uBAwCIZ,GAAa,GAxCjB,2EADc,uBAAC,WAAD,wBA4Cda,EACD,GAAE,CAACjB,IAEJ,IAAMc,EAAgB,SAAAI,GACpB,OAAOA,EAAMC,KAAI,kBAA4C,CAC3DC,KADe,EAAGA,KAElBC,UAFe,EAASA,UAGxBC,aAHe,EAAoBA,aAInCC,GAJe,EAAkCA,GAAlC,GAMlB,EAED,OACE,2BACGhB,GAAS,CAAEA,MAAAA,GACXJ,IAAa,SAACqB,EAAA,EAAD,KACd,wBACGnB,EAAKc,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,UAAWC,EAAuB,EAAvBA,aAAcC,EAAS,EAATA,GAC1C,OACE,gBAAaE,UAAWC,EAAxB,UACGJ,IACE,gBACAG,UAAWC,EACXC,IAAG,0CAAqCL,GACxCM,IAAKR,KAIR,uBAAIA,KACJ,uBAAIC,MAVGE,EAaZ,QAKR,C,mEC7FD,EAAyB,uB,SCmBzB,EAhBe,WACX,OACI,iBAAKE,UAAWC,EAAhB,WACE,uBAAG,gBACH,SAAC,KAAD,CACEG,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,iBACVC,aAAc,CAAC,EACfC,aAAa,iBACbC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,eAIhE,C,sBCnBD,SAASC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOtC,GAEP,YADAgC,EAAOhC,EAET,CAEIqC,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAOlC,KAAK6B,EAAOC,EAEvC,CAEe,SAASO,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMY,EAAGK,MAAMJ,EAAME,GAEzB,SAASZ,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOc,GACdnB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASc,EACnE,CAEAf,OAAMgB,EACR,GACF,CACF,C","sources":["webpack://goit-react-hw-05-movies/./src/components/Cast.module.css?f72c","components/Cast.js","webpack://goit-react-hw-05-movies/./src/components/Loader.module.css?9d64","components/Loader.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"img\":\"Cast_img__CNfev\",\"img__item\":\"Cast_img__item__7Zmni\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Loader from './Loader';\nimport css from '../components/Cast.module.css'\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState([]);\n  const [error, setError] = useState(null);\n\n  // console.log('movieId', movieId);\n\n  useEffect(() => {\n    async function fetchActor() {\n      setIsLoading(true);\n      try {\n        // await fetchActor(`\n        // https://api.themoviedb.org/3/trending/movie/day?api_key=356db60679791a010148fefe0790ebd1`\n        // // https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=356db60679791a010148fefe0790ebd1`\n        // )\n\n        // .then(responseCast => {console.log('responseCastjson', responseCast);\n        //     return responseCast.json();\n        // })\n        // .then (responseCast => {\n        //   console.log('responseCast', responseCast);\n        //     // setActor(responseCast);\n\n        // })\n\n        await fetch(\n          `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=356db60679791a010148fefe0790ebd1`\n        )\n          .then(response => {\n            return response.json();\n          })\n          .then(response => {\n            // setData(response);\n\n            setData([...getNormalized(response.cast)]);\n            // setData(prevState => [\n            //   ...prevState,\n            //   ...getNormalized(response.cast),\n            // ]);\n\n            // console.log('запрос на Cast идет', data);\n            // console.log('response.cast', response.cast);\n            // console.log('response', response);\n          });\n      } catch (error) {\n        setError(error.message);\n        // console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetchActor();\n  }, [movieId]);\n\n  const getNormalized = array => {\n    return array.map(({ name, character, profile_path, id }) => ({\n      name,\n      character,\n      profile_path,\n      id,\n    }));\n  };\n\n  return (\n    <div>\n      {error && { error }}\n      {isLoading && <Loader />}\n      <ul>\n        {data.map(({ name, character, profile_path, id }) => {\n          return (\n            <li key={id} className={css.img__item}>\n              {profile_path && (\n                 <img\n                 className={css.img}\n                 src={`https://image.tmdb.org/t/p/w500/${profile_path}`}\n                 alt={name}\n               />\n              )}\n              \n              <p>{name}</p>\n              <p>{character}</p>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n    // <div>{movieId}</div>\n  );\n};\n\nexport default Cast;\n","// extracted by mini-css-extract-plugin\nexport default {\"spiner\":\"Loader_spiner__xTnPT\"};","// import 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport { ColorRing } from 'react-loader-spinner';\nimport css from '..//components/Loader.module.css'\n\nconst Loader = () =>{\n    return (\n        <div className={css.spiner}>\n          <p>LOADING...</p>\n          <ColorRing\n            visible={true}\n            height=\"80\"\n            width=\"80\"\n            ariaLabel=\"blocks-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"blocks-wrapper\"\n            colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n          />\n        </div>\n      )\n}\nexport default Loader;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["movieId","useParams","useState","isLoading","setIsLoading","data","setData","error","setError","useEffect","fetch","then","response","json","getNormalized","cast","message","fetchActor","array","map","name","character","profile_path","id","Loader","className","css","src","alt","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}