{"version":3,"file":"static/js/910.46a8e1f2.chunk.js","mappings":"yNAyDA,UArDa,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCE,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAEA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KA+BA,OA3BAC,EAAAA,EAAAA,YAAU,WAAO,SACAC,IADD,uEACd,qFACIJ,GAAa,GADjB,kBAGcI,EAAW,oDAAD,OACqBR,EADrB,sDAGfS,MAAK,SAAAC,GACF,OAAOA,EAAaC,MACvB,IACAF,MAAM,SAAAC,GACLE,QAAQC,IAAI,eAAgBH,EAG7B,IAbT,sDAeMJ,EAAS,KAAMQ,SAfrB,uBAmBQV,GAAa,GAnBrB,2EADc,sBAuBdI,GACD,GAAE,CAACR,KAIF,2BAAK,OACFK,GAAS,CAACA,MAAAA,GACZF,IAAa,SAAC,IAAD,MAajB,C,mECtDD,EAAyB,uB,SCmBzB,EAhBe,WACX,OACI,iBAAKY,UAAWC,EAAhB,WACE,uBAAG,gBACH,SAAC,KAAD,CACEC,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,iBACVC,aAAc,CAAC,EACfC,aAAa,iBACbC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,eAIhE,C","sources":["components/Cast.js","webpack://goit-react-hw-05-movies/./src/components/Loader.module.css?9d64","components/Loader.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Loader from './Loader';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n  // const [actor, setActor ] = useState(null);\n  const [error, setError] = useState(null);\n\n  // console.log('movieId', movieId);\n\n  useEffect(() => {\n    async function fetchActor() {\n        setIsLoading(true);\n        try {\n            await fetchActor(`\n            https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=356db60679791a010148fefe0790ebd1`\n            )\n            .then(responseCast => {\n                return responseCast.json();\n            })\n            .then (responseCast => { \n              console.log('responseCast', responseCast);\n                // setActor(responseCast);\n      \n            })\n        } catch (error ) {\n          setError(error.message); \n          // console.log(error);\n        }\n        finally{\n            setIsLoading(false)\n        }\n    }\n    fetchActor();\n  }, [movieId]);\n\n\n  return (\n    <div>Cast\n      {error && {error}}\n    {isLoading && <Loader />}\n    </div>\n    // <ul>\n    //     {actor.map(actorName=> {\n    //         return (\n    //             <li>\n    //                 {/* <img src=\"{}\" */}\n    //             </li>\n    //         )\n    //     })}\n    // </ul>\n    // <div>{movieId}</div>\n  );\n};\n\nexport default Cast;\n","// extracted by mini-css-extract-plugin\nexport default {\"spiner\":\"Loader_spiner__xTnPT\"};","// import 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport { ColorRing } from 'react-loader-spinner';\nimport css from '..//components/Loader.module.css'\n\nconst Loader = () =>{\n    return (\n        <div className={css.spiner}>\n          <p>LOADING...</p>\n          <ColorRing\n            visible={true}\n            height=\"80\"\n            width=\"80\"\n            ariaLabel=\"blocks-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"blocks-wrapper\"\n            colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n          />\n        </div>\n      )\n}\nexport default Loader;"],"names":["movieId","useParams","useState","isLoading","setIsLoading","error","setError","useEffect","fetchActor","then","responseCast","json","console","log","message","className","css","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors"],"sourceRoot":""}